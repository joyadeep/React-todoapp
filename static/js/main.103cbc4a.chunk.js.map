{"version":3,"sources":["context/todoContext.js","components/listrow/Listrow.jsx","components/searchbar/Searchbar.jsx","components/todolist/Todolist.jsx","App.js","index.js"],"names":["TodoContext","createContext","TodoContextProvider","props","useState","list","setList","edit","setEdit","Provider","value","addTask","task","id","Math","floor","random","clearAll","removeTask","filter","findTask","foundtask","find","editTask","newList","map","tlist","children","Listrow","item","useContext","className","onClick","Searchbar","inp","setInp","useEffect","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","Todolist","style","color","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAEaA,EAAYC,0BAuCVC,EArCW,SAACC,GAE3B,MAAqBC,mBAAS,IAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAqBF,mBAAS,MAA9B,mBAAOG,EAAP,KAAYC,EAAZ,KA0BA,OACQ,cAACR,EAAYS,SAAb,CAAsBC,MAAO,CAACL,OAAKM,QAzB7B,SAACC,GACXN,EAAQ,GAAD,mBAAKD,GAAL,CAAU,CAACO,OAAKC,GAAGC,KAAKC,MAAoB,IAAdD,KAAKE,eAwBKC,SArBpC,WACXX,EAAQ,KAoBgDY,WAjB3C,SAACL,GACdP,EAAQD,EAAKc,QAAO,SAAAP,GAAI,OAAEA,EAAKC,KAAOA,OAgB6BN,OAAKa,SAb7D,SAACP,GACZ,IAAMQ,EAAUhB,EAAKiB,MAAK,SAAAV,GAAI,OAAEA,EAAKC,KAAKA,KAC1CL,EAAQa,IAWyEE,SARtE,SAACX,EAAKC,GAClB,IAAMW,EAAQnB,EAAKoB,KAAI,SAAAC,GAAK,OAAEA,EAAMb,KAAKA,EAAG,CAACD,OAAKC,MAAIa,KACrDpB,EAAQkB,GACThB,EAAQ,QAKH,SACKL,EAAMwB,YC9BNC,G,MAAU,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAErB,EAA4BC,qBAAW9B,GAAhCkB,EAAP,EAAOA,WAAWE,EAAlB,EAAkBA,SAUlB,OACI,mCACE,sBAAKW,UAAU,oBAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBF,EAAKjB,OAC5B,sBAAKmB,UAAU,UAAf,UACI,sBAAKA,UAAU,OAAOC,QAVnB,WACbZ,EAASS,EAAKhB,KASJ,cAA4C,cAAC,IAAD,IAA5C,OACA,qBAAKkB,UAAU,SAASC,QAfnB,WACfd,EAAWW,EAAKhB,KAcN,SAA+C,cAAC,IAAD,gBCpBpDoB,G,YAAY,WACrB,MAAwCH,qBAAW9B,GAA5CW,EAAP,EAAOA,QAAQM,EAAf,EAAeA,SAASV,EAAxB,EAAwBA,KAAKgB,EAA7B,EAA6BA,SAC7B,EAAmBnB,mBAAS,IAA5B,mBAAO8B,EAAP,KAAWC,EAAX,KA8BA,OAVAC,qBAAU,WAGFD,EAFD5B,EAEQA,EAAKK,KAGT,MACT,CAACL,IAIC,mCACC,qBAAKwB,UAAU,sBAAf,SACI,uBAAMM,SA7BI,SAACC,GAChBA,EAAEC,iBACEhC,EAMAgB,EAASW,EAAI3B,EAAKM,KAJlBF,EAAQuB,GACRC,EAAO,MAwBN,UACI,uBAAOK,KAAK,OAAOC,YAAY,iBAC/B/B,MAAOwB,EAAKQ,SAAU,SAACJ,GAAMH,EAAOG,EAAEK,OAAOjC,QAAUkC,UAAQ,IACnE,sBAAKb,UAAU,UAAf,UACA,yBAAQS,KAAK,SAAST,UAAU,UAAhC,cAA4CxB,EAAK,OAAO,MAAxD,OACA,wBAAQiC,KAAK,QAAQT,UAAU,YAAYC,QAtBlC,WACdf,KAqBK,+BCrCA4B,EAAW,WACpB,MAAwBf,qBAAW9B,GAA5BK,EAAP,EAAOA,KAAP,EAAYa,WAEZ,OACI,qBAAKa,UAAU,qBAAf,SAEE,sBAAKA,UAAU,mBAAf,UACI,oBAAIe,MAAO,CAACC,MAAM,SAAlB,kBAEA,cAAC,EAAD,IAEI1C,EAAK2C,OAAmE,mCAEtE3C,EAAKoB,KAAI,SAACI,GACN,OACQ,cAAC,EAAD,CAASA,KAAMA,GAAYA,EAAKhB,SAJlC,qBAAKkB,UAAU,aAAf,6CCLfkB,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACA,cAAC,EAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.103cbc4a.chunk.js","sourcesContent":["import  { createContext, useState } from 'react';\r\n\r\nexport const TodoContext=createContext();\r\n\r\nconst TodoContextProvider=(props)=>{\r\n\r\nconst [list,setList]=useState([]);\r\nconst [edit,setEdit]=useState(null);\r\n\r\nconst addTask=(task)=>{\r\n    setList([...list,{task,id:Math.floor(Math.random()*1000)}]);\r\n  }\r\n\r\nconst clearAll=()=>{\r\n    setList([]);\r\n}\r\n\r\nconst removeTask=(id)=>{\r\n    setList(list.filter(task=>task.id !== id));\r\n}\r\n\r\nconst findTask=(id)=>{\r\n    const foundtask=list.find(task=>task.id===id);\r\n    setEdit(foundtask);\r\n   }\r\n\r\nconst editTask=(task,id)=>{\r\n   const newList=list.map(tlist=>tlist.id===id?{task,id}:tlist);\r\n    setList(newList);\r\n   setEdit(null);\r\n\r\n}\r\n\r\nreturn(\r\n        <TodoContext.Provider value={{list,addTask,clearAll,removeTask,edit,findTask,editTask}} >\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default TodoContextProvider;","import React, { useContext } from 'react'\r\nimport {FiEdit,FiDelete} from 'react-icons/fi';\r\nimport { TodoContext } from '../../context/todoContext';\r\nimport \"./listrow.css\";\r\n\r\nexport const Listrow = ({item}) => {\r\n    \r\n    const {removeTask,findTask}=useContext(TodoContext);\r\n    const handleDelete=()=>{\r\n        removeTask(item.id);\r\n        }\r\n\r\n    const handleEdit=()=>{\r\n        findTask(item.id);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n          <div className=\"listrow-container\">\r\n              <div className=\"task\">{item.task}</div>\r\n              <div className=\"options\">\r\n                  <div className=\"edit\" onClick={handleEdit}> <FiEdit/> </div>\r\n                  <div className=\"delete\" onClick={handleDelete}><FiDelete/></div>\r\n                 </div>\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { TodoContext } from '../../context/todoContext';\r\nimport \"./searchbar.css\";\r\nexport const Searchbar = () => {\r\n    const {addTask,clearAll,edit,editTask}= useContext(TodoContext);\r\n    const [inp,setInp]=useState(\"\");\r\n\r\n    \r\n    \r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(!edit)\r\n        {\r\n            addTask(inp);\r\n            setInp(\"\");\r\n        }\r\n        else{\r\n            editTask(inp,edit.id);\r\n        }\r\n        }\r\n    \r\n    const handleClear=()=>{\r\n        clearAll();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(edit)\r\n        {\r\n            setInp(edit.task);\r\n          }\r\n        else\r\n        setInp(\"\");\r\n    },[edit])\r\n\r\n\r\n    return (\r\n        <>\r\n         <div className=\"searchbar-container\">\r\n             <form onSubmit={handleSubmit}>\r\n                 <input type=\"text\" placeholder=\"add new task..\" \r\n                 value={inp} onChange={(e)=>{ setInp(e.target.value) }} required />\r\n             <div className=\"buttons\">\r\n             <button type='submit' className='btn-add'> {edit?\"Edit\":\"Add\"} </button>\r\n             <button type=\"reset\" className='btn-clear' onClick={handleClear}>Clear</button>\r\n             </div>\r\n             </form>\r\n         </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport \"./todolist.css\";\r\nimport { TodoContext } from '../../context/todoContext'\r\nimport { Listrow } from '../listrow/Listrow';\r\nimport { Searchbar } from '../searchbar/Searchbar';\r\n\r\nexport const Todolist = () => {\r\n    const {list,removeTask}=useContext(TodoContext);\r\n    \r\n    return(\r\n        <div className=\"todolist-container\">\r\n          \r\n          <div className=\"todolist-content\">\r\n              <h1 style={{color:\"black\"}}>Todo</h1>\r\n\r\n              <Searchbar/>\r\n\r\n                {!list.length?<div className='empty-list'>Wohoo ! No task available</div>:<>\r\n                {\r\n                    list.map((item)=>{\r\n                        return(\r\n                                <Listrow item={item}  key={item.id}/>\r\n                          )\r\n                    })\r\n                }\r\n                </>\r\n                }\r\n              \r\n          </div>\r\n\r\n          \r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport { Listrow } from './components/listrow/Listrow';\nimport { Todolist } from './components/todolist/Todolist';\n\nfunction App() {\n  return (\n    <>\n      <Todolist/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport TodoContextProvider from './context/todoContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoContextProvider>\n    <App />\n    </TodoContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}